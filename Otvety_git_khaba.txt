1.что такое git
2.как устанавливается git на различные операционные системы
3.что такое репозиторий
4.завести учётную запись на github
5.какие бывают виды репозиториев на github
6.как организовывается совместная работа над одним репозиторием в github.
7.зачем нужны push и pull и когда они применяются
8.что такое commit









1) Есть система контроля версий.
github это просто веб-портал, который предлагает хостинг для исходного кода на базе системы контроля версий GIT, при этом идет некоторая поддержка других систем контроля версий.

Для начала, нужно понять что такое Version Control System

GitHub - это VCS с социальной составляющей. В соц. сети ты выкладываешь к примеру фотографии, а тут исходный код.


2)Чтобы работать с Git, нужно установить ее на компьютер. На официальном сайте Git можно найти установщик и подробные инструкции для новичков.

Git можно использовать из командной строки во встроенном терминале или установить клиент с графическим пользовательским интерфейсом. Графический интерфейс более удобен для новичков, 

однако часто в таких клиентах реализована только некоторая часть функциональности, поэтому в основном разработчики пользуются командной строкой.

3) Репозиторий — это все файлы, находящиеся под контролем версий, вместе с историей их изменения и другой служебной информацией.

Репозиторий Git можно создать, либо выбрав любую папку на компьютере, либо клонировав себе уже существующий репозиторий, например у работодателя.
4) Зарегистрировался
5) Существуют разные способы хранения и использования репозитория: выделяют локальные, централизованные и распределенные системы контроля версий.

В локальных системах контроля версий репозиторий хранится и используется на одном устройстве, но работать с такой системой может только один разработчик. В случае централизованной системы репозиторий хранится на одном сервере.

Лучше всего для большого количества разработчиков подходят распределенные системы контроля версий, к которым относится и Git. Такая система представляет собой облачное хранилище: 
каждый пользователь хранит на своем устройстве весь репозиторий целиком, и по мере изменения репозитории синхронизируются.

Также есть виды доступа репозитория : общедоступный или частный

6) Репозитории можно использовать для совместной работы с другими пользователями и управления ею.

С помощью проблем можно собирать отзывы пользователей, сообщать об ошибках в программном обеспечении и упорядочивать задачи. Дополнительные сведения см. в разделе Сведения о проблемах.

Вы можете использовать GitHub Discussions, чтобы задавать вопросы и отвечать на них, обмениваться информацией, делать объявления, а также проводить обсуждения о проекте или участвовать в них. Дополнительные сведения см. в разделе Сведения об обсуждениях.

С помощью запросов на вытягивание можно предлагать изменения в репозитории. Дополнительные сведения см. в разделе Сведения о запросах на вытягивание.

С помощью досок проектов можно упорядочивать проблемы и запросы на вытягивание, а также ранжировать их по приоритету. Дополнительные сведения см. в разделе О панелях проектов.

В репозиториях и отдельных файлах применяются ограничения на размер. Подробные сведения см. в разделе Что такое квота диска

7) Если программист работает один, то пуш позволяет хранить код в облаке, например github, gitlab и не только, избавляя от риска потери данных на компьютере.

Дополнительно для синхронизации еще используют git pull для получения изменений с сервера и git remote, чтобы получить список удаленных подключений к репозиторию.

8) По-английски commit значит «фиксировать». Git-коммит — это операция, которая берет все подготовленные изменения и отправляет их в репозиторий как единое целое.

Зачем нужен коммит, если Git и так следит за всеми изменениями? Коммиты разбивают процесс разработки, состоящий из большого количества правок, на отдельные шаги. То есть коммит — это некое логически завершенное изменение внутри проекта и понятная (в том числе и другим разработчикам) точка, к которой можно вернуться, если возникнут какие-то проблемы.

Изменения в рамках одного коммита подчиняются определенным, установленным командой разработчиков правилам и рекомендациям, касающимся именования, описания и содержания коммитов.

Как правило, рабочий процесс представляет собой цикл: коммит — изменение файлов — коммит.




